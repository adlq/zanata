<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.zanata</groupId>
		<artifactId>zanata-parent</artifactId>
		<version>1.6-SNAPSHOT</version>
		<relativePath>../../zanata-parent/pom.xml</relativePath>
	</parent>
	<artifactId>zanata-war</artifactId>
	<packaging>war</packaging>
	<name>Zanata web application</name>

	<!-- Should be the same as zanata-parent/pom.xml -->
	<scm>
		<connection>scm:git:git://github.com/zanata/zanata.git</connection>
		<developerConnection>scm:git:git@github.com:zanata/zanata.git</developerConnection>
		<url>https://github.com/zanata/zanata</url>
	</scm>

	<properties>
		<jboss.embedded.version>beta3.SP12</jboss.embedded.version>
		<war.config.dir>${basedir}/src/etc</war.config.dir>
		<containerId>jboss5x</containerId>
      <allow.deploy.skip>true</allow.deploy.skip>
		
		<!-- application properties -->
		<env.debug>false</env.debug>
		<env.hibernate.indexBase>zanatasearchindex</env.hibernate.indexBase>
		<war.name>zanata</war.name>
		<zanata.gwt.module>org.zanata.webtrans.Application</zanata.gwt.module>
		<extra.servlets />

		<!-- Default MySql login -->
		<mysql.user>root</mysql.user>
		<mysql.password />
	</properties>

	<build>
		<finalName>zanata</finalName>
		
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>
		<plugin>
			<artifactId>maven-antrun-plugin</artifactId>
			<version>1.6</version>
			<executions>
			 <execution>
				<phase>prepare-package</phase>
				<configuration>
					<tasks>
						<mkdir dir="${project.build.directory}/zanata" />
					</tasks>
				</configuration>
				<goals>
					<goal>run</goal>
				</goals>
			 </execution>
			</executions>
		</plugin>
			<plugin>
			    <artifactId>maven-clean-plugin</artifactId>
			    <version>2.4.1</version>
			    <configuration>
			      <!-- Remove extra directories created by GWT DevMode -->
			      <filesets>
			        <fileset>
			          <directory>src/main/webapp/WEB-INF/deploy</directory>
			        </fileset>
			        <fileset>
			          <directory>src/main/webapp/webtrans</directory>
			        </fileset>
			      </filesets>
		          <followSymlinks>false</followSymlinks>
			    </configuration>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<warName>${war.name}-${project.version}</warName>
					<webResources>
						<resource>
							<directory>src/main/webapp-jboss</directory>
							<filtering>true</filtering>
						</resource>
						<resource>
                            <directory>src/main/resources/org/zanata/webtrans/images</directory>
                            <includes>
                                <include>public-img/**</include>
                            </includes>
                        </resource>
                        <!-- Include the GWT generated resources -->
                        <resource>
                        	<directory>${project.build.directory}/zanata</directory>
                        </resource>
					</webResources>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
						<manifestEntries>
							<Implementation-Build>${maven.build.timestamp}</Implementation-Build>
							<SCM-Changeset>${changeSet}</SCM-Changeset>
						</manifestEntries>
					</archive>
				</configuration>
				<executions>
					<!-- Internal auth war -->
					<execution>
						<id>default-war</id>
						<configuration>
							<classifier>internal</classifier>
							<webappDirectory>${project.build.directory}/${project.build.finalName}-internal</webappDirectory>
							<filters>
								<filter>${war.config.dir}/internalauth.properties</filter>
								<filter>${war.config.dir}/mysql.properties</filter>
							</filters>
							<archive>
								<manifestEntries>
									<Classifier>internal</Classifier>
								</manifestEntries>
							</archive>
						</configuration>
					</execution>
					<!-- Default Seam tests exploded war -->
					<execution>
						<id>generate-seamtests-war</id>
						<goals>
							<goal>exploded</goal>
						</goals>
						<phase>pre-integration-test</phase>
						<configuration>
							<webappDirectory>${project.build.directory}/${project.build.finalName}-seamtests</webappDirectory>
							<filters>
								<filter>${war.config.dir}/seamtests.properties</filter>
								<filter>${war.config.dir}/h2.properties</filter>
							</filters>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>compile</id>
						<goals>
							<goal>compile</goal>
							<!-- compile, generateAsync, test -->
						</goals>
						<configuration>
							<module>${zanata.gwt.module}</module>
						</configuration>
					</execution>
					<execution>
						<id>clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<suiteXmlFiles>
						<suiteXmlFile>src/test/resources/AllNonContainerTests.tng.xml</suiteXmlFile>
					</suiteXmlFiles>
				</configuration>
			</plugin>
			
			<!-- Configure Failsafe to run in integration-test phase -->
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.7.2</version>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<redirectTestOutputToFile>false</redirectTestOutputToFile>
					<printSummary>true</printSummary>
					<forkMode>always</forkMode>
					<suiteXmlFiles>
						<suiteXmlFile>src/test/resources/AllIntegrationTests.tng.xml</suiteXmlFile>
					</suiteXmlFiles>
					<additionalClasspathElements>
						<additionalClasspathElement>${project.basedir}/src/test/jboss-embedded-bootstrap</additionalClasspathElement>
						<additionalClasspathElement>${project.build.directory}/zanata-seamtests/WEB-INF/classes</additionalClasspathElement>
						<additionalClasspathElement>${project.build.directory}/zanata-seamtests</additionalClasspathElement>
					</additionalClasspathElements>
					<childDelegation>true</childDelegation>
					<useSystemClassLoader>true</useSystemClassLoader>
					<argLine xml:space="preserve">-Xmx1024m -XX:MaxPermSize=512m -XX:+UseConcMarkSweepGC
						-XX:+CMSClassUnloadingEnabled -XX:+HeapDumpOnOutOfMemoryError
						-XX:HeapDumpPath=${project.build.directory} -Dsun.lang.ClassLoader.allowArraySyntax=true</argLine>
					<classpathDependencyExcludes>
						<classpathDependencyExclude>
							<!-- collides with XMLLoginConfigImpl in jboss-embedded-all -->
							org.jboss.security:jbosssx
						</classpathDependencyExclude>
					</classpathDependencyExcludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>l10n-maven-plugin</artifactId>
				<version>1.0-alpha-2</version>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<goals>
							<goal>pseudo</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<pseudoLocale>qc</pseudoLocale>
					<includes>
						<include>**/*.properties</include>
					</includes>
					<excludes>
						<exclude>**/*_*.properties</exclude>
						<exclude>**/components.properties</exclude>
						<exclude>**/seam.properties</exclude>
						<exclude>**/seam-deployment.properties</exclude>
						<exclude>**/eventservice.properties</exclude>
						<exclude>**/pluralforms.properties</exclude>
					</excludes>
					<inputDirectory>src/main/resources</inputDirectory>
                    <outputDirectory>${project.build.outputDirectory}</outputDirectory>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<!-- zanata war is too big to deploy, especially with five variants -->
				<configuration>
               <!-- MEAD builds must deploy all artifacts, so we run them with -Dallow.deploy.skip=false -->
					<skip>${allow.deploy.skip}</skip>
				</configuration>
			</plugin>

		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											l10n-maven-plugin
										</artifactId>
										<versionRange>
											[1.0-alpha-2,)
										</versionRange>
										<goals>
											<goal>pseudo</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.enunciate
										</groupId>
										<artifactId>
											maven-enunciate-plugin
										</artifactId>
										<versionRange>[1.9-RC1,)</versionRange>
										<goals>
											<goal>assemble</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

   <reporting>
      <plugins>
         <plugin>
            <groupId>org.codehaus.enunciate</groupId>
            <artifactId>maven-enunciate-plugin</artifactId>
            <!-- apparently pluginManagement is ignored in reporting -->
            <version>${enunciate.version}</version>
            <configuration>
               <configFile>etc/enunciate/enunciate.xml</configFile>

               <!--
               These two enunciate options are undocumented, but
               their absence causes an error during site generation.
                -->
               <enunciateArtifactId>unused</enunciateArtifactId>
               <moduleName>unused</moduleName>

               <!-- The subdirectory of the site where the documentation will be put. -->
               <!-- Note that if this isn't set, the documentation will overwrite the site. -->
               <docsSubdir>apidocs</docsSubdir>
            </configuration>
         </plugin>
      </plugins>
   </reporting>

	<profiles>
		<profile>
			<id>explode</id>
			<activation>
				<property>
					<name>env</name>
					<value>dev</value>
				</property>
			</activation>
			<properties>
				<!-- common config for Cargo -->
				<port>8080</port>
				<installDir>${java.io.tmpdir}/cargo/installs</installDir>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<version>1.1.0</version>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>redeploy</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<wait>false</wait>
							<container>
								<containerId>${containerId}</containerId>
							</container>
							<configuration>
								<type>existing</type>
								<home>${jboss.home}/server/default</home>
							</configuration>
							<deployer>
								<deployables>
									<deployable>
										<pingURL>http://localhost:${port}/${war.name}-internal/</pingURL>
										<location>${project.build.directory}/zanata-internal</location>
										<properties>
											<context>zanata</context>
										</properties>
									</deployable>
								</deployables>
							</deployer>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-ds-context</id>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<phase>package</phase>
								<configuration>
									<outputDirectory>${as.deploy}</outputDirectory>
									<resources>
										<resource>
											<directory>${basedir}/src/etc</directory>
											<filtering>true</filtering>
											<includes>
												<include>zanata-ds.xml</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>jboss-maven-plugin</artifactId> 
						<version>1.4</version> <configuration> <serverName>default</serverName> </configuration> 
						<executions> <execution> <id>deploy-ds</id> <phase>package</phase> <goals><goal>hard-deploy</goal></goals> 
						<configuration> <fileName>${project.build.directory}/classes/zanata-ds.xml</fileName> 
						</configuration> </execution> <execution> <id>deploy-war-unpacked</id> <phase>package</phase> 
						<goals><goal>hard-deploy</goal></goals> <configuration> <fileName>${project.build.directory}/zanata.war</fileName> 
						<unpack>true</unpack> </configuration> </execution> </executions> </plugin> -->
				</plugins>
			</build>
		</profile>
		
		<profile>
			<id>nogwt</id>
			<properties>
				<gwt.compiler.skip>true</gwt.compiler.skip>
			</properties>
		</profile>

		<profile>
			<id>fedora</id>
			<activation>
				<property>
					<name>!internalAuth</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<executions>
							<execution>
								<id>generate-fedora-war</id>
								<goals>
									<goal>war</goal>
								</goals>
								<phase>package</phase>
								<configuration>
									<classifier>fedora</classifier>
									<webappDirectory>${project.build.directory}/${project.build.finalName}-fedora</webappDirectory>
									<filters>
										<filter>${war.config.dir}/fedora.properties</filter>
										<filter>${war.config.dir}/mysql.properties</filter>
									</filters>
									<archive>
										<manifestEntries>
											<Classifier>fedora</Classifier>
										</manifestEntries>
									</archive>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>kerberos</id>
			<activation>
				<property>
					<name>!internalAuth</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<executions>
							<execution>
								<id>generate-kerberos-war</id>
								<goals>
									<goal>war</goal>
								</goals>
								<phase>package</phase>
								<configuration>
									<classifier>kerberos</classifier>
									<webappDirectory>${project.build.directory}/${project.build.finalName}-kerberos</webappDirectory>
									<filters>
										<filter>${war.config.dir}/kerberos.properties</filter>
										<filter>${war.config.dir}/mysql.properties</filter>
									</filters>
									<archive>
										<manifestEntries>
											<Classifier>kerberos</Classifier>
										</manifestEntries>
									</archive>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<profile>
			<id>jaas</id>
			<activation>
				<property>
					<name>!internalAuth</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<executions>
							<execution>
								<id>generate-jaas-war</id>
								<goals>
									<goal>war</goal>
								</goals>
								<phase>package</phase>
								<configuration>
									<classifier>jaas</classifier>
									<webappDirectory>${project.build.directory}/${project.build.finalName}-jaas</webappDirectory>
									<filters>
										<filter>${war.config.dir}/jaas.properties</filter>
										<filter>${war.config.dir}/mysql.properties</filter>
									</filters>
									<archive>
										<manifestEntries>
											<Classifier>jaas</Classifier>
										</manifestEntries>
									</archive>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>autotest</id>
			<activation>
				<property>
					<name>!internalAuth</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<executions>
							<execution>
								<id>generate-autotest-war</id>
								<goals>
									<goal>war</goal>
								</goals>
								<phase>package</phase>
								<configuration>
									<classifier>autotest</classifier>
									<webappDirectory>${project.build.directory}/${project.build.finalName}-autotest</webappDirectory>
									<filters>
										<filter>${war.config.dir}/autotest.properties</filter>
										<filter>${war.config.dir}/h2.properties</filter>
									</filters>
									<archive>
										<manifestEntries>
											<Classifier>autotest</Classifier>
										</manifestEntries>
									</archive>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<!-- This profile tells GWT to use an alternative GWT module which has 
				only one permutation, and to compile in draft mode -->
			<id>chrome</id>
			<properties>
				<zanata.gwt.module>org.zanata.webtrans.ApplicationSafari</zanata.gwt.module>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>gwt-maven-plugin</artifactId>
						<configuration>
							<draftCompile>true</draftCompile>
							<style>PRETTY</style>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<!-- This profile tells GWT to use an alternative GWT module which has 
				only one permutation, and to compile in draft mode -->
			<id>firefox</id>
			<properties>
				<zanata.gwt.module>org.zanata.webtrans.ApplicationGecko18</zanata.gwt.module>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>gwt-maven-plugin</artifactId>
						<configuration>
							<draftCompile>true</draftCompile>
							<style>PRETTY</style>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>eclipse</id>
			<build>
				<finalName>zanata-dev</finalName>
				<resources>
					<resource>
						<directory>src/main/resources-dev</directory>
						<filtering>false</filtering>
					</resource>
				</resources>

				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-eclipse-plugin</artifactId>
						<configuration>
							<wtpversion>2.0</wtpversion>

							<additionalBuildcommands>
								<buildCommand>
									<name>com.google.gdt.eclipse.core.webAppProjectValidator</name>
								</buildCommand>
								<buildCommand>
									<name>com.google.gwt.eclipse.core.gwtProjectValidator</name>
								</buildCommand>
							</additionalBuildcommands>

							<additionalProjectnatures>
								<projectnature>com.google.gwt.eclipse.core.gwtNature</projectnature>
								<projectnature>com.google.gdt.eclipse.core.webAppNature</projectnature>
							</additionalProjectnatures>

							<classpathContainers>
								<classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
								<classpathContainer>com.google.gwt.eclipse.core.GWT_CONTAINER</classpathContainer>
							</classpathContainers>
							<excludes>
								<!-- These are provided by the GWT container -->
								<exclude>com.google.gwt:gwt-servlet</exclude>
								<exclude>com.google.gwt:gwt-user</exclude>
							</excludes>
						</configuration>
					</plugin>

				</plugins>

			</build>
		</profile>

	</profiles>

	<dependencies>

		<!-- Zanata-specific dependencies -->

		<dependency>
			<groupId>org.zanata</groupId>
			<artifactId>zanata-common-api</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.zanata</groupId>
			<artifactId>zanata-common-util</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.zanata</groupId>
			<artifactId>zanata-model</artifactId>
			<version>${project.version}</version>
		</dependency>
		
		<dependency>
            <groupId>org.zanata</groupId>
            <artifactId>zanata-adapter-po</artifactId>
            <version>${project.version}</version>
        </dependency>
        
		<dependency>
			<groupId>org.zanata</groupId>
			<artifactId>zanata-rest-client</artifactId>
			<version>${version}</version>
	        <type>test-jar</type>
			<scope>test</scope>
		</dependency>
		
		<!-- Compatibility Dependencies -->
		
		<dependency>
			<groupId>org.zanata</groupId>
			<artifactId>zanata-api-compat</artifactId>
			<version>1.0.0</version>
			<scope>test</scope>
			<classifier>v1.4.4</classifier>
		</dependency>
		
		<dependency>
			<groupId>org.zanata</groupId>
			<artifactId>zanata-api-compat</artifactId>
			<version>1.0.0</version>
			<scope>test</scope>
			<classifier>v1.3</classifier>
		</dependency>
        
      <dependency>
         <groupId>com.google.gwt</groupId>
         <artifactId>gwt-servlet</artifactId>
         <scope>runtime</scope>
      </dependency>

      <dependency>
         <groupId>com.google.gwt</groupId>
         <artifactId>gwt-user</artifactId>
         <scope>provided</scope>
      </dependency>

		<!-- Seam Dependencies -->

		<dependency>
			<groupId>org.jboss.seam</groupId>
			<artifactId>jboss-seam</artifactId>
			<version>${seam.version}</version>
			<type>ejb</type>
		</dependency>

		<dependency>
			<groupId>org.jboss.seam</groupId>
			<artifactId>jboss-seam-ui</artifactId>
			<version>${seam.version}</version>
		</dependency>

		<dependency>
			<!-- TODO this should be excluded in production -->
			<groupId>org.jboss.seam</groupId>
			<artifactId>jboss-seam-debug</artifactId>
			<version>${seam.version}</version>
		</dependency>

		<dependency>
			<groupId>org.jboss.seam</groupId>
			<artifactId>jboss-seam-mail</artifactId>
			<version>${seam.version}</version>
		</dependency>

		<dependency>
			<groupId>org.jboss.seam</groupId>
			<artifactId>jboss-seam-remoting</artifactId>
			<version>${seam.version}</version>
		</dependency>

		<!-- RestEasy dependencies -->

		<dependency>
			<groupId>org.jboss.seam</groupId>
			<artifactId>jboss-seam-resteasy</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxrs</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxb-provider</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jackson-provider</artifactId>
		</dependency>

		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-jaxrs</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-xc</artifactId>
		</dependency>


		<!-- Drools -->

		<dependency>
			<groupId>org.drools</groupId>
			<artifactId>drools-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.drools</groupId>
			<artifactId>drools-compiler</artifactId>
			<exclusions>
			    <exclusion>
			        <artifactId>ecj</artifactId>
			        <groupId>org.eclipse.jdt.core.compiler</groupId>
			    </exclusion>
			</exclusions>
		</dependency>

		<!-- Richfaces -->
<!-- 
		<dependency>
			<groupId>org.richfaces.core</groupId>
			<artifactId>richfaces-core-impl</artifactId>
		</dependency>

		<dependency>
			<groupId>org.richfaces.ui</groupId>
			<artifactId>richfaces-components-ui</artifactId>
		</dependency>
 -->

		<!-- Hibernate / JPA -->

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-search</artifactId>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<scope>${hibernate.scope}</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<scope>${hibernate.scope}</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-annotations</artifactId>
			<scope>${hibernate.scope}</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<scope>${hibernate.scope}</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-jmx</artifactId>
			<scope>${hibernate.scope}</scope>
		</dependency>

		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
			<scope>provided</scope>
		</dependency>

      <dependency>
         <groupId>net.sf.ehcache</groupId>
         <artifactId>ehcache-core</artifactId>
         <version>2.5.1</version>
      </dependency>

		<!-- Other -->

		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
		</dependency>

		<dependency>
			<groupId>org.tuckey</groupId>
			<artifactId>urlrewritefilter</artifactId>
		</dependency>

		<dependency>
			<groupId>com.ibm.icu</groupId>
			<artifactId>icu4j</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>

		<dependency>
			<groupId>org.fedorahosted.openprops</groupId>
			<artifactId>openprops</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.codehaus.enunciate</groupId>
			<artifactId>enunciate-core-annotations</artifactId>
			<version>${enunciate.version}</version>
		</dependency>
		
		<!-- Quartz -->
		
		<dependency>
            <groupId>quartz</groupId>
            <artifactId>quartz</artifactId>
        </dependency>

		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-core</artifactId>
			<!-- okapi-lib-search would otherwise use lucene 3.0.0 -->
			<version>${lucene.version}</version>
		</dependency>
		
		<!-- JBoss 5 Provided Dependencies -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-search</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-commons-annotations</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.hibernate</groupId>
					<artifactId>ejb3-persistence</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>ejb3-persistence</artifactId>
			<version>1.0.2.GA</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>el-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<!-- TODO does this need to use ${hibernate.scope} for jboss7 profile? -->
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.ejb</groupId>
			<artifactId>ejb-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<scope>test</scope>
        </dependency>

		<dependency>
			<groupId>javassist</groupId>
			<artifactId>javassist</artifactId>
			<scope>provided</scope>
		</dependency>

<!-- 
		<dependency>
			<groupId>javax.faces</groupId>
			<artifactId>jsf-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.sun.faces</groupId>
			<artifactId>jsf-impl</artifactId>
			<scope>provided</scope>
		</dependency>
 -->

		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>jsr250-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.xml.stream</groupId>
			<artifactId>stax-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>xpp3</groupId>
			<artifactId>xpp3_min</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Container dependencies - provided by jboss -->

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
		</dependency>


		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- <dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.ejb</groupId>
			<artifactId>ejb-api</artifactId>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>

		<dependency>
			<groupId>javassist</groupId>
			<artifactId>javassist</artifactId>
		</dependency> -->

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<!-- we should probably use scope test -->
		</dependency>

		<!-- <dependency>
			<groupId>javax.faces</groupId>
			<artifactId>jsf-api</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.faces</groupId>
			<artifactId>jsf-impl</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>jsr250-api</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.xml.stream</groupId>
			<artifactId>stax-api</artifactId>
		</dependency>

		<dependency>
			<groupId>xpp3</groupId>
			<artifactId>xpp3_min</artifactId>
		</dependency> -->

		<!-- Testing dependencies -->

		<dependency>
			<groupId>org.zanata</groupId>
			<artifactId>zanata-rest-client</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.embedded</groupId>
			<artifactId>jboss-embedded-all</artifactId>
			<version>${jboss.embedded.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.jboss.microcontainer</groupId>
					<artifactId>jboss-deployers-client-spi</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.jboss.embedded</groupId>
					<artifactId>jboss-embedded</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.embedded</groupId>
			<artifactId>thirdparty-all</artifactId>
			<version>${jboss.embedded.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.seam.embedded</groupId>
			<artifactId>jboss-embedded-api</artifactId>
			<version>${jboss.embedded.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.jboss.microcontainer</groupId>
					<artifactId>jboss-deployers-client-spi</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.9</version>
            <scope>test</scope>
        </dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.easytesting</groupId>
			<artifactId>fest-assert</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
		</dependency>

		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<!-- We use testng in DBUnitImporter so can't use test scope here -->
		</dependency>

		<!-- GWT related dependencies -->

		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.1</version>
		</dependency>

		<dependency>
			<!-- needed for GWT compilation of JAXB annotated classes -->
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.2</version>
			<classifier>sources</classifier>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.google.gwt.inject</groupId>
			<artifactId>gin</artifactId>
		</dependency>

		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
		</dependency>

		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-incubator</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>net.customware.gwt.dispatch</groupId>
			<artifactId>gwt-dispatch</artifactId>
			<version>1.0.0</version>
		</dependency>

		<dependency>
			<groupId>net.customware.gwt.presenter</groupId>
			<artifactId>gwt-presenter</artifactId>
			<version>1.1.1</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.allen-sauer.gwt.log</groupId>
			<artifactId>gwt-log</artifactId>
			<version>3.1.7</version>
		</dependency>

		<dependency>
			<groupId>de.novanic.gwteventservice</groupId>
			<artifactId>gwteventservice</artifactId>
		</dependency>

		<!-- end of GWT related dependencies -->

		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.liquibase.ext</groupId>
			<artifactId>modify-column</artifactId>
		</dependency>

		<!-- openid4java -->
	    <dependency>
	       <groupId>org.htmlparser</groupId>
	       <artifactId>htmlparser</artifactId>
	       <version>1.6</version>
	       <exclusions>
	          <!--  htmlparser tries to bring in java.home/lib/tools.jar -->
	          <exclusion>
	             <artifactId>tools</artifactId>
	             <groupId>com.sun</groupId>
	          </exclusion>
	       </exclusions>
	    </dependency>

		<dependency>
			<groupId>org.openid4java</groupId>
			<artifactId>openid4java</artifactId>
			<version>0.9.5</version>
		</dependency>

		<dependency>
			<groupId>org.openxri</groupId>
			<artifactId>openxri-client</artifactId>
			<version>1.2.0</version>
			<exclusions>
				<exclusion>
					<groupId>xalan</groupId>
					<artifactId>xalan</artifactId>
				</exclusion>
				<exclusion>
					<groupId>xerces</groupId>
					<artifactId>xercesImpl</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-jcl</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.openxri</groupId>
			<artifactId>openxri-syntax</artifactId>
			<version>1.2.0</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-jcl</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>jboss</groupId>
			<artifactId>jbosssx</artifactId>
			<version>4.2.2.GA</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jboss</groupId>
			<artifactId>jboss-jmx</artifactId>
			<version>4.2.2.GA</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jboss</groupId>
			<artifactId>jboss-system</artifactId>
			<version>4.2.2.GA</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

</project>
